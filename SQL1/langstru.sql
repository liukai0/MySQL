-- 	***************************************************
-- 		^> File Name: langstru.sql
-- 		^> Author: T-Rex
-- 		^> Mail: 1010026261@qq.com
-- 		^> Created Time: 2016/08/22 - 20:21:49
-- 	***************************************************

#十六进制 每两位转化为一个字符
SELECT x'4D7953514C';
SELECT 0xa+0;
SELECT 0x5061756c;
#为确保作为数字处理
SELECT 0x41,CAST(0x41 AS UNSIGNED);
#转为十六进制
SELECT HEX('cat');

#b'value'表示位域型 value是一个用0和1写成的二进制 BIT()转为二进制

#用户自定义变量 赋值set用:或:= 非set用:=
SET @t1=0,@t2=0,@t3=0;
SELECT @t1:=(@t2:=1)+@t3:=4,@t1,@t2,@,t3;

#注释
#1.以#字符开始到行尾
#2.以--序列开始到行尾。请注意--(双破折号)注释风格要求第2个破折号后面至少跟一个空格符(例如空格、tab、换行符等等)。该语法与标准SQL注释语法稍有不同
#3.以/*序列开始到*/序列结束。结束序列不一定在同一行中，因此该语句允许注释跨越多行

/*
1.数值类型

BIT[(M)]
位域类型。M表示每个值的位数，范围为从1到64。如果M被省略，默认为1。

TINYINT[(M)] [UNSIGNED] [ZEROFILL]
很小的整数。带符号的范围是-128到127。无符号的范围是0到255。

BOOL，BOOLEAN
是TINYINT(1)的同义词。0值被视为假。非0值视为真。

SMALLINT[(M)] [UNSIGNED] [ZEROFILL]
小的整数。带符号的范围是-32768到32767。无符号的范围是0到65535。

MEDIUMINT[(M)] [UNSIGNED] [ZEROFILL]
中等大小的整数。带符号的范围是-8388608到8388607。无符号的范围是0到16777215。

INT[(M)] [UNSIGNED] [ZEROFILL]
普通大小的整数。带符号的范围是-2147483648到2147483647。无符号的范围是0到4294967295。

INTEGER[(M)] [UNSIGNED] [ZEROFILL]
这是INT的同义词。

BIGINT[(M)] [UNSIGNED] [ZEROFILL]
大整数。带符号的范围是-9223372036854775808到9223372036854775807。无符号的范围是0到18446744073709551615。

FLOAT[(M,D)] [UNSIGNED] [ZEROFILL]
小(单精度)浮点数。允许的值是-3.402823466E+38到-1.175494351E-38、0和1.175494351E-38到3.402823466E+38。这些是理论限制，基于IEEE标准。实际的范围根据硬件或操作系统的不同可能稍微小些。M是浮点数的总位数，D是小数点后面的位数。如果M和D被省略，根据硬件允许的限制来保存值。单精度浮点数精确到大约7位小数位。如果指定UNSIGNED，不允许负值。

DOUBLE[(M,D)] [UNSIGNED] [ZEROFILL]
普通大小(双精度)浮点数。允许的值是-1.7976931348623157E+308到-2.2250738585072014E-308、0和2.2250738585072014E-308到 1.7976931348623157E+308。这些是理论限制，基于IEEE标准。实际的范围根据硬件或操作系统的不同可能稍微小些。M是小数总位数，D是小数点后面的位数。如果M和D被省略，根据硬件允许的限制来保存值。双精度浮点数精确到大约15位小数位。如果指定UNSIGNED，不允许负值。

DOUBLE PRECISION[(M,D)] [UNSIGNED] [ZEROFILL], REAL[(M,D)] [UNSIGNED] [ZEROFILL]
为DOUBLE的同义词。除非：如果SQL服务器模式启动REAL_AS_FLOAT选项，REAL是FLOAT的同义词而不是DOUBLE的同义词。

FLOAT(p) [UNSIGNED] [ZEROFILL]
浮点数.p表示精度，但MySQL只使用该值来确定列的数据类型是否为FLOAT或DOUBLE。如果p取值在0到24之间，数据类型将变为没有M或D值的FLOAT类型。如果p取值为25到53，数据类型将变为没有M或D值的DOUBLE型。这种情况下列范围与本节前面描述的单精度FLOAT或双精度DOUBLE数据类型相同。
FLOAT(p)语法与ODBC兼容。

2.日期和时间类型

DATE
日期。支持的范围为1000-01-01到9999-12-31。MySQL以YYYY-MM-DD格式显示DATE值，但允许使用字符串或数字类型数据为DATE列赋值。

DATETIME[(fsp)]
日期和时间的组合。支持的范围是1000-01-01 00:00:00到9999-12-31 23:59:59。MySQL以YYYY-MM-DD HH:MM:SS格式显示DATETIME值，但允许使用字符串或数字为DATETIME列赋值。
其中，可选参数fsp取值范围是0-6可以指定精确到秒的分位数，默认的是0，指精确到秒。

TIMESTAMP[(fsp)]
时间戳。范围是1970-01-01 00:00:00到2038-01-19 03:14:07.999999。
TIMESTAMP列用于执行INSERT或UPDATE操作时记录日期和时间。如果你不分配一个值，表中的第一个TIMESTAMP列自动设置为最近操作的日期和时间。也可以通过分配一个NULL值，将TIMESTAMP列设置为当前的日期和时间。

TIME 时间。范围是-838:59:59到838:59:59。MySQL以HH:MM:SS格式显示TIME值，但允许使用字符串或数字为TIME列分配值。

YEAR[(2|4)] 两位或四位格式的年。默认是四位格式。在四位格式中，允许的值是1901到2155和0000。在两位格式中，允许的值是70到69，表示从1970年到2069年。MySQL以YYYY格式显示YEAR值，但允许使用字符串或数字为YEAR分配值。

3.字符串类型

CHAR
这是CHAR(1)的同义词。

[NATIONAL] VARCHAR(M) [BINARY]
变长字符串。M表示最大列长度。M的范围是0到65,535。(VARCHAR的最大实际长度由最长的行的大小和使用的字符集确定。最大有效长度是65,532字节）。

注：MySQL 5.1遵从标准SQL规范，并且不自动移除VARCHAR值的尾部空格。

VARCHAR是字符VARYING的简写。BINARY属性是指定列的字符集的二元校对规则的简写。排序和比较基于数值字符值。VARCHAR保存时用一个字节或两个字节长的前缀+数据。如果VARCHAR列声明的长度大于255，长度前缀是两个字节。

BINARY(M)
BINARY类型类似于CHAR类型，但存储二进制字节字符串而不是非二进制字符串。

VARBINARY(M)
VARBINARY类型类似于VARCHAR类型，但存储二进制字节字符串而不是非二进制字符串。

TINYBLOB
最大长度为255字节的BLOB列。

TINYTEXT
最大长度为255字符的TEXT列。

BLOB[(M)]
最大长度为65,535字节的BLOB列。可以给出该类型的可选长度M。如果给出，则MySQL将列创建为最小的但足以容纳M字节长的值的BLOB类型。

TEXT[(M)]
最大长度为65,535字符的TEXT列。可以给出可选长度M。则MySQL将列创建为最小的但足以容纳M字符长的值的TEXT类型。

MEDIUMBLOB
最大长度为16,777,215字节的BLOB列。

MEDIUMTEXT
最大长度为16,777,215字符的TEXT列。

LONGBLOB
最大长度为4,294,967,295或4GB字节的BLOB列。LONGBLOB列的最大有效(允许的)长度取决于客户端或服务器协议中配置最大包大小和可用的内存。

LONGTEXT
最大长度为4,294,967,295或4GB字符的TEXT列。LONGTEXT列的最大有效(允许的)长度取决于客户端或服务器协议中配置最大包大小和可用的内存。

ENUM('value1','value2',...)
枚举类型。一个字符串只能由一个值，从值列列表'value1'，'value2'，...，NULL中或特殊''错误值中选出。ENUM列最多可以有65,535个截然不同的值。ENUM值在内部用)
*/
